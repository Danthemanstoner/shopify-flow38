{% assign image_block = section.blocks | where: "type", "collection_image" | first %}
{% assign words = collection.description | split: ' ' %}
{% assign half_index = words.size | divided_by: 2 %}
{% assign first_half = words | slice: 0, half_index | join: ' ' %}
{% assign second_half = words | slice: half_index, words.size | join: ' ' %}

<header class="section-header collection">
  {%- for block in section.blocks -%}
    {%- case block.type -%}
      {%- when '@app' -%}
        <div {{ block.shopify_attributes }}>{% render block %}</div>
      {%- when 'title' -%}
        <div class="collection-header__title sitewide--title-wrapper wrapper-padded" {{ block.shopify_attributes }}>
          <h1 class="page--title">{{ collection.title }}</h1>
        </div>
      {%- when 'description' -%}
        {% if collection.description != blank %}
          <div class="rte rte--header collection-header__description wrapper-padded text-link-animated" {{ block.shopify_attributes }}>
            <div class="expandable-content-section">
              <p id="description-text">
                {{ first_half }}
                <span id="remaining-text" style="display: none;">{{ second_half }}</span>
              </p>
              <button id="expandable-content-toggle">Read More</button>
            </div>
          </div>
        {% endif %}
      {%- when 'collection_image' -%}
        ...
    {%- endcase -%}
  {%- endfor -%}
</header>

<style>
.expandable-content-section #expandable-content-toggle {
    cursor: pointer;
    background-color: #f1f1f1;
    border: none;
    padding: 5px;
    display: block; /* Ensure the button is on a new line */
    text-align: center;
    margin: 10px auto; /* Center the button horizontally */
    width: fit-content; /* Make the button width as per its content */
}
</style>


<script>
document.addEventListener('DOMContentLoaded', function() {
    const toggleButton = document.getElementById('expandable-content-toggle');
    const remainingText = document.getElementById('remaining-text');

    toggleButton.addEventListener('click', () => {
        if (remainingText.style.display === "none") {
            remainingText.style.display = "inline";
            toggleButton.textContent = 'Read Less';
        } else {
            remainingText.style.display = "none";
            toggleButton.textContent = 'Read More';
        }
    });
});
</script>




{% schema %}
{
  "name": "t:sections.template--collection--header.name",
  "settings": [

  ],
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "collection_image",
      "name": "t:sections.template--collection--header.blocks.collection_image.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:all.The_title_of_the_collection_"
        },
        {
          "type": "select",
          "id": "collection-image-size",
          "label": "t:sections.template--collection--header.blocks.collection_image.settings.collection-image-size.label",
          "options": [
            {
              "value": "20vh",
              "label": "t:all.Small"
            },
            {
              "value": "30vh",
              "label": "t:all.Medium"
            },
            {
              "value": "40vh",
              "label": "t:all.Large"
            },
            {
              "value": "original",
              "label": "t:all.Original"
            }
          ],
          "default": "20vh"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.template--collection--header.blocks.title.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:all.The_title_of_the_collection_"
        }
      ]
    },
    {
      "type": "description",
      "name": "t:sections.template--collection--header.blocks.description.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.template--collection--header.blocks.description.settings.paragraph-0.content"
        }
      ]
    }
  ]
}
{% endschema %}
