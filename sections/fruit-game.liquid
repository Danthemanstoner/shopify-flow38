<div class="fruit-game-container">
  <canvas id="gameCanvas" width="800" height="600"></canvas>
  <div id="gameInfo">
    <div id="score">SCORE: 0</div>
    <div id="level">LEVEL 1</div>
    <div id="lives">LIVES: 3</div>
  </div>
  <div id="gameOver" style="display: none;">
    <h2>GAME OVER</h2>
    <p>YOUR SCORE: <span id="finalScore"></span></p>
    <form id="leaderboardForm">
      <input type="text" id="playerName" placeholder="Enter your name" required>
      <button type="submit">Submit Score</button>
    </form>
    <div id="leaderboard"></div>
  </div>
  <div id="reward" style="display: none;">
    <h3>Congratulations!</h3>
    <p>You've earned a 25% discount on your next purchase.</p>
    <p>Your discount code: <span id="discountCodeText">FRUIT25OFF</span></p>
    <button onclick="FruitGame.applyDiscountToCart()">Apply to Cart</button>
  </div>
</div>

<script>
  window.FruitGame = {
    setCookie: function(name, value, days) {
      let expires = "";
      if (days) {
        const date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        expires = "; expires=" + date.toUTCString();
      }
      document.cookie = name + "=" + value + "; path=/" + expires;
    },

    getCookie: function(name) {
      const nameEQ = name + "=";
      const cookies = document.cookie.split(';');
      for (let i = 0; i < cookies.length; i++) {
        let c = cookies[i];
        while (c.charAt(0) === ' ') c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
      }
      return null;
    },

    init: function() {
      this.canvas = document.getElementById('gameCanvas');
      this.ctx = this.canvas.getContext('2d');
      this.scoreElement = document.getElementById('score');
      this.levelElement = document.getElementById('level');
      this.livesElement = document.getElementById('lives');
      this.gameOverElement = document.getElementById('gameOver');
      this.finalScoreElement = document.getElementById('finalScore');
      this.rewardElement = document.getElementById('reward');
      this.discountCodeElement = document.getElementById('discountCodeText');

      this.score = parseInt(this.getCookie('highScore')) || 0;
      this.level = 1;
      this.lives = 3;
      this.fruit = { x: Math.random() * 750, y: 0, speed: 2 };
      this.basket = { x: 375, y: 550, width: 50, height: 50 };
      this.gameActive = false;

      this.canvas.addEventListener('mousemove', (event) => {
        const rect = this.canvas.getBoundingClientRect();
        this.basket.x = Math.min(Math.max(event.clientX - rect.left - this.basket.width / 2, 0), this.canvas.width - this.basket.width);
      });

      this.canvas.addEventListener('click', () => this.startGame());
      this.updateGame();
    },

    startGame: function() {
      this.score = 0;
      this.level = 1;
      this.lives = 3;
      this.gameActive = true;
      this.gameOverElement.style.display = 'none';
      this.rewardElement.style.display = 'none';
      this.updateGame();
    },

    updateGame: function() {
      if (!this.gameActive) return;

      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
      this.fruit.y += this.fruit.speed;
      this.ctx.fillStyle = 'red';
      this.ctx.fillRect(this.fruit.x, this.fruit.y, 20, 20);
      this.ctx.fillStyle = 'blue';
      this.ctx.fillRect(this.basket.x, this.basket.y, this.basket.width, this.basket.height);

      if (this.fruit.y > this.canvas.height) {
        this.lives--;
        this.fruit.y = 0;
        this.fruit.x = Math.random() * 750;
        if (this.lives <= 0) {
          this.endGame();
          return;
        }
      }

      if (this.fruit.y + 20 >= this.basket.y && this.fruit.x >= this.basket.x && this.fruit.x <= this.basket.x + this.basket.width) {
        this.score++;
        this.setCookie('highScore', this.score, 7);
        this.fruit.y = 0;
        this.fruit.x = Math.random() * 750;
        if (this.score % 10 === 0) this.level++;
      }

      this.scoreElement.textContent = `SCORE: ${this.score}`;
      this.levelElement.textContent = `LEVEL ${this.level}`;
      this.livesElement.textContent = `LIVES: ${this.lives}`;
      requestAnimationFrame(() => this.updateGame());
    },

    endGame: function() {
      this.gameActive = false;
      this.finalScoreElement.textContent = this.score;
      this.gameOverElement.style.display = 'block';
      if (this.score >= 20) this.rewardElement.style.display = 'block';
    },

    applyDiscountToCart: function() {
      alert('Discount code applied: ' + this.discountCodeElement.textContent);
    }
  };

  window.onload = () => FruitGame.init();
</script>
