<!-- /sections/customer-register.liquid -->

<div class="wrapper-padded">
  <div class="grid page-main--wrapper">

    <div class="grid__item large--one-third push--large--one-third text-center">

      <div class="sitewide--title-wrapper">
        <h1 class="page--title">Create account</h1>
      </div>

      <div class="form-vertical">
        <form id="createCustomerForm" method="post" action="/account">
          
          <label for="FirstName" class="hidden-label">First name</label>
          <input type="text" name="customer[first_name]" id="FirstName" class="input-full" placeholder="First name" autocapitalize="words" autofocus="">

          <label for="LastName" class="hidden-label">Last name</label>
          <input type="text" name="customer[last_name]" id="LastName" class="input-full" placeholder="Last name" autocapitalize="words">

          <label for="Email" class="hidden-label">Email</label>
          <input type="email" name="customer[email]" id="Email" class="input-full" placeholder="Email" autocorrect="off" autocapitalize="off">

          <label for="CreatePassword" class="hidden-label">Password</label>
          <input type="password" name="customer[password]" id="CreatePassword" class="input-full" placeholder="Password">

          <label class="checkbox-label" for="SubscribeMarketing" style="display: block; margin-top: 15px; text-align: left; font-size: 14px;">
            <input type="checkbox" name="subscribe_marketing" id="SubscribeMarketing" value="yes" style="margin-right: 10px;">
            I want to receive updates and promotional offers and subscribe to the newsletter.
          </label>

          <p>
            <button type="submit" class="btn btn--full account-section--btn">Create Account</button>
          </p>
          <span class="register-cancel--wrapper nav-link-animated--custom"><a class="animated-link--item" href="/">Cancel</a></span>
        </form>
      </div>

    </div>

  </div>
</div>

{% schema %}
{
  "name": "Customer Register",
  "settings": [

  ]
}
{% endschema %}

<script>
document.addEventListener('DOMContentLoaded', function () {
  const createCustomerForm = document.getElementById('createCustomerForm');
  const subscribeMarketingCheckbox = document.getElementById('SubscribeMarketing');

  createCustomerForm.addEventListener('submit', function (event) {
    event.preventDefault(); // Prevent the default form submission

    const formData = new FormData(createCustomerForm);

    fetch('/account', {
      method: 'POST',
      body: formData,
      headers: {
        'Accept': 'application/json',
      }
    }).then(response => {
      if (response.ok) {
        // Check if the user wants to subscribe to the newsletter
        if (subscribeMarketingCheckbox.checked) {
          const email = document.getElementById('Email').value;
          const newsletterData = new URLSearchParams();
          newsletterData.append('form_type', 'customer');
          newsletterData.append('contact[email]', email);
          newsletterData.append('contact[tags]', 'newsletter');

          return fetch('/contact', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: newsletterData
          }).then(() => {
            // Redirect to the account page after subscribing to the newsletter
            window.location.href = '/account';
          }).catch(error => {
            console.error('Newsletter subscription failed:', error);
            // Still redirect to the account page even if the newsletter subscription fails
            window.location.href = '/account';
          });
        } else {
          // Redirect to the account page if no newsletter subscription is needed
          window.location.href = '/account';
        }
      } else {
        // Handle account creation errors here
        return response.json().then(data => {
          console.error('Account creation failed:', data);
          alert('Account creation failed: ' + (data.errors ? data.errors.join(', ') : 'Unknown error'));
        });
      }
    }).catch(error => {
      console.error('Error:', error);
    });
  });
});
</script>
