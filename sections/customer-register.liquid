<!-- /sections/customer-register.liquid -->

<div class="wrapper-padded">
  <div class="grid page-main--wrapper">

    <div class="grid__item large--one-third push--large--one-third text-center">

      <div class="sitewide--title-wrapper">
        <h1 class="page--title">{{ 'customer.register.title' | t }}</h1>
      </div>

      <div class="form-vertical">
        {% form 'create_customer', id: 'createCustomerForm' %}

          {{ form.errors | default_errors }}

          <label for="FirstName" class="hidden-label">{{ 'customer.register.first_name' | t }}</label>
          <input type="text" name="customer[first_name]" id="FirstName" class="input-full" placeholder="{{ 'customer.register.first_name' | t }}" {% if form.first_name %}value="{{ form.first_name }}"{% endif %} autocapitalize="words" autofocus>

          <label for="LastName" class="hidden-label">{{ 'customer.register.last_name' | t }}</label>
          <input type="text" name="customer[last_name]" id="LastName" class="input-full" placeholder="{{ 'customer.register.last_name' | t }}" {% if form.last_name %}value="{{ form.last_name }}"{% endif %} autocapitalize="words">

          <label for="Email" class="hidden-label">{{ 'customer.register.email' | t }}</label>
          <input type="email" name="customer[email]" id="Email" class="input-full{% if form.errors contains 'email' %} error{% endif %}" placeholder="{{ 'customer.register.email' | t }}" {% if form.email %} value="{{ form.email }}"{% endif %} autocorrect="off" autocapitalize="off">

          <label for="CreatePassword" class="hidden-label">{{ 'customer.register.password' | t }}</label>
          <input type="password" name="customer[password]" id="CreatePassword" class="input-full{% if form.errors contains 'password' %} error{% endif %}" placeholder="{{ 'customer.register.password' | t }}">

          <label class="checkbox-label" for="SubscribeMarketing" style="display: block; margin-top: 15px; text-align: left; font-size: 14px;">
            <input type="checkbox" name="subscribe_marketing" id="SubscribeMarketing" value="yes" style="margin-right: 10px;">
            I want to receive updates and promotional offers and subscribe to the newsletter.
          </label>

          <p>
            <button type="submit" class="btn btn--full account-section--btn">{{ 'customer.register.submit' | t }}</button>
          </p>
          <span class="register-cancel--wrapper nav-link-animated--custom"><a class="animated-link--item" href="{{ shop.url }}">{{ 'customer.register.cancel' | t }}</a></span>

        {% endform %}

        <!-- Hidden Newsletter Form -->
        <form id="newsletterForm" method="post" action="/contact" accept-charset="UTF-8" class="contact-form" style="display: none;">
          <input type="hidden" name="form_type" value="customer">
          <input type="hidden" name="utf8" value="âœ“">
          <input type="hidden" id="newsletterEmail" name="contact[email]">
          <input type="hidden" name="contact[tags]" value="newsletter">
        </form>
      </div>

    </div>

  </div>
</div>

{% schema %}
{
  "name": "t:sections.customer-register.name",
  "settings": [

  ]
}
{% endschema %}

<script>
document.addEventListener('DOMContentLoaded', function () {
  const createCustomerForm = document.getElementById('createCustomerForm');
  const subscribeMarketingCheckbox = document.getElementById('SubscribeMarketing');
  const newsletterForm = document.getElementById('newsletterForm');
  const newsletterEmailInput = document.getElementById('newsletterEmail');

  createCustomerForm.addEventListener('submit', function (event) {
    // Check if the email field is already taken and show error if it is
    const email = document.getElementById('Email').value;
    if (subscribeMarketingCheckbox.checked) {
      event.preventDefault(); // Prevent the default form submission

      // Simulate form submission to check for errors
      fetch('/account', {
        method: 'POST',
        body: new FormData(createCustomerForm)
      }).then(response => {
        if (response.ok) {
          // If no error, submit the newsletter form
          newsletterEmailInput.value = email;
          return fetch(newsletterForm.action, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: new URLSearchParams(new FormData(newsletterForm))
          });
        } else {
          return Promise.reject('Email has already been taken.');
        }
      }).then(() => {
        // Finally, submit the original form
        createCustomerForm.submit();
      }).catch(error => {
        console.error('Error:', error);
        createCustomerForm.submit(); // Submit the original form even if the subscription fails
      });
    }
  });
});
</script>
