<!-- Start of the cart.liquid template code -->
<div class="wrapper-padded main-page-container">
  {% assign subtotal_compare_at_price = 0 %}

  {% if cart.item_count > 0 %}
    <div class="sitewide--title-wrapper">
      <h1 class="page--title">{{ 'cart.general.title' | t }}</h1>
    </div>

    <!-- Delivery Date and Time Picker Section -->
    <div class="delivery-date-time-picker">
      <h2>Schedule Your Delivery</h2>
      
      <!-- Delivery Date Picker -->
      <div class="picker-group">
        <label for="delivery-date-picker-input">Select Delivery Date:</label>
        <input type="text" id="delivery-date-picker-input" placeholder="Select a date">
      </div>

      <!-- Delivery Time Picker -->
      <div class="picker-group">
        <label for="delivery-time-picker">Select Delivery Time:</label>
        <select id="delivery-time-picker">
          <option value="" disabled selected>Select a time</option>
          <option value="08:00 AM">08:00 AM - 09:00 AM</option>
          <option value="10:00 AM">10:00 AM - 11:00 AM</option>
          <option value="12:00 PM">12:00 PM - 01:00 PM</option>
          <option value="02:00 PM">02:00 PM - 03:00 PM</option>
        </select>
      </div>
      
      <!-- Confirm Button -->
      <button id="confirm-delivery" class="btn btn-primary">Confirm Delivery Details</button>

      <!-- Display confirmation after selection -->
      <div id="confirmation-message"></div>
    </div>

    <!-- Cart Items Section -->
    <form action="{{ routes.cart_url }}" method="post" novalidate class="cart table-wrap" data-wetheme-section-type="template--cart" data-wetheme-section-id="template--cart">
      <table class="cart-table full table--responsive">
        <thead class="cart__row cart__header-labels">
          <th scope="row" colspan="2" class="text-center"></th>
          <th scope="row" class="text-center">{{ 'cart.label.price' | t }}</th>
          <th scope="row" class="text-center">{{ 'cart.label.quantity' | t }}</th>
          <th scope="row" class="text-center">{{ 'cart.label.total' | t }}</th>
        </thead>
        <tbody>
          {% for item in cart.items %}
            <tr class="cart__row table__section">
              <td data-label="{{ 'customer.order.product' | t }}">
                <a href="{{ item.url | within: collections.all }}" class="cart__image">
                  {% capture cart_page_product_image_alt %}{{ item.image.alt | default: item.title | escape }}{% endcapture %}
                  {% render 'responsive-image' with item.image, alt: cart_page_product_image_alt, blur: false %}
                </a>
              </td>
              <td class="cart__row--product-details">
                <a class="cart__row--title" href="{{ item.url }}">{{ item.product.title }}</a>
                <div class="cart__meta-text">
                  {% unless item.variant.title contains 'Default' %}
                    {{ item.variant.title }}
                  {% endunless %}
                </div>
                <span class="text-link-animated">
                  <a href="{{ routes.cart_url }}/change?line={{ forloop.index }}&amp;quantity=0" class="cart__remove">
                    <small>{{ 'cart.general.remove' | t }}</small>
                  </a>
                </span>
              </td>
              <td class="text-center" data-label="{{ 'cart.label.price' | t }}">
                <span class="money">{{ item.price | money }}</span>
              </td>
              <td class="text-center" data-label="{{ 'cart.label.quantity' | t }}">
                <div class="js-qty-wrapper">
                  <div class="js-qty">
                    <button type="button" aria-label="{{ 'general.accessibility.quantity.decrease_quantity' | t }}" class="js js-qty__adjust js-qty__adjust--minus icon-fallback-text standalone-icon--wrapper" data-id="" data-qty="0">
                      {% render 'theme-icon' with icon: 'minus' %}
                      <span class="fallback-text">âˆ’</span>
                    </button>
                    <input type="text" class="js-qty__num" value="{{ item.quantity }}" min="1" data-id="" aria-label="quantity" pattern="[0-9]*" name="updates[]" id="updates_{{ item.id }}">
                    <button type="button" aria-label="{{ 'general.accessibility.quantity.increase_quantity' | t }}" class="js js-qty__adjust js-qty__adjust--plus icon-fallback-text standalone-icon--wrapper" data-id="" data-qty="1">
                      {% render 'theme-icon' with icon: 'plus' %}
                      <span class="fallback-text">+</span>
                    </button>
                  </div>
                </div>
              </td>
              <td class="text-center cart-total-label" data-label="{{ 'cart.label.total' | t }}">
                <span class="money">{{ item.final_line_price | money }}</span>
              </td>
            </tr>
          {% endfor %}
        </tbody>
      </table>

      <div class="grid cart__row">
        <div class="grid__item text-right">
          <p>
            <span class="cart__subtotal-title">{{ 'cart.general.subtotal' | t }}</span>
            <span class="h3 cart__subtotal"><span class="money">{{ cart.total_price | money }}</span></span>
          </p>
          <div class="btn-wrapper-default">
            <input type="submit" name="update" class="btn btn--secondary update-cart cart--button-update btn--secondary" aria-label="{{ 'cart.general.update' | t }}" value="{{ 'cart.general.update' | t }}">
            <button type="submit" name="checkout" aria-label="{{ 'cart.general.checkout' | t }}" class="btn cart--button-checkout">{{ 'cart.general.checkout' | t }}</button>
          </div>
        </div>
      </div>
    </form>
  {% else %}
    <div class="sitewide--title-wrapper">
      <h1 class="page--title">{{ 'cart.general.title' | t }}</h1>
    </div>
    <div class="cart--empty-cart">
      <p>{{ 'cart.general.empty' | t }}</p>
      <a href="{{ routes.all_products_collection_url }}" class="btn">{{ 'general.continue_shopping' | t }}</a>
    </div>
  {% endif %}
</div>

<!-- Include Flatpickr CSS and JS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize Flatpickr for date selection
    flatpickr("#delivery-date-picker-input", {
      minDate: "today", // Disable past dates
      dateFormat: "D M j Y", // Example: Sun Sep 10 2023
    });

    const timePicker = document.getElementById('delivery-time-picker');
    const confirmBtn = document.getElementById('confirm-delivery');
    const confirmationMessage = document.getElementById('confirmation-message');
    
    confirmBtn.addEventListener('click', function() {
      const selectedDate = document.getElementById('delivery-date-picker-input').value;
      const selectedTime = timePicker.value;

      if (selectedDate && selectedTime) {
        // Display confirmation message
        confirmationMessage.textContent = `Delivery on ${selectedDate} at ${selectedTime}`;
        confirmationMessage.style.color = 'green';

        // Call Shopify API to update cart attributes
        fetch('/cart/update.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            attributes: {
              'Delivery Date': selectedDate,
              'Delivery Time': selectedTime
            }
          })
        }).then(response => response.json())
          .then(data => {
            if (data.status === 200) {
              alert('Delivery details updated successfully!');
            } else {
              alert('Failed to update delivery details. Please try again.');
            }
          })
          .catch(error => {
            alert('Error updating delivery details. Please check console.');
            console.error(error);
          });
      } else {
        alert('Please select both a delivery date and time.');
      }
    });
  });
</script>

<style>
  /* Custom CSS Styling */
  .delivery-date-time-picker {
    margin-top: 20px;
    text-align: center;
    background-color: #f9f9f9;
    padding: 20px;
    border-radius: 10px;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }
  
  .delivery-date-time-picker h2 {
    font-size: 1.8em;
    margin-bottom: 20px;
  }
  
  .delivery-date-time-picker h2 {
    font-size: 1.8em;
    margin-bottom: 20px;
  }

  .picker-group {
    margin-bottom: 15px;
    text-align: left;
  }

  .picker-group label {
    font-size: 1.2em;
    display: block;
    margin-bottom: 5px;
  }

  #delivery-date-picker-input, #delivery-time-picker {
    width: 100%;
    padding: 10px;
    font-size: 1.1em;
    border: 1px solid #ccc;
    border-radius: 5px;
  }

  #delivery-time-picker {
    appearance: none;
    background-color: white;
    cursor: pointer;
  }

  /* Success Message Styling */
  #confirmation-message {
    margin-top: 10px;
    font-size: 1.1em;
  }
</style>

<!-- Include Flatpickr JS and CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize Flatpickr for date selection
    flatpickr("#delivery-date-picker-input", {
      minDate: "today", // Disable past dates
      dateFormat: "D M j Y", // Example: Sun Sep 10 2024
    });

    const timePicker = document.getElementById('delivery-time-picker');
    const confirmBtn = document.getElementById('confirm-delivery');
    const confirmationMessage = document.getElementById('confirmation-message');
    
    confirmBtn.addEventListener('click', function() {
      const selectedDate = document.getElementById('delivery-date-picker-input').value;
      const selectedTime = timePicker.value;

      if (selectedDate && selectedTime) {
        // Display confirmation message
        confirmationMessage.textContent = `Delivery on ${selectedDate} at ${selectedTime}`;
        confirmationMessage.style.color = 'green';

        // Call Shopify API to update cart attributes
        fetch('/cart/update.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            attributes: {
              'Delivery Date': selectedDate,
              'Delivery Time': selectedTime
            }
          })
        }).then(response => response.json())
          .then(data => {
            if (data.status === 'success') {
              alert('Delivery details updated successfully!');
            } else {
              alert('Failed to update delivery details. Please try again.');
            }
          })
          .catch(error => {
            alert('Error updating delivery details. Please check the console.');
            console.error(error);
          });
      } else {
        alert('Please select both a delivery date and time.');
      }
    });
  });
</script>
